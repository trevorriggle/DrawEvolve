📘 DrawEvolve iPad Foundation Audit + Stabilization Plan (v1.1)

Author

Trevor Riggle (RIG Tech) — October 2025
Last Updated: October 12, 2025

⸻

1️⃣ Project Context

DrawEvolve is an iOS-first AI-assisted drawing app built with Next.js (for backend web) and native SwiftUI/Metal for iPad. Its mission: help artists evolve their technique through personalized, non-judgmental feedback while keeping the human act of drawing first.

This audit follows the first live iPad build, where on-device canvas testing exposed early structural and UX-level bugs.

Goal: stabilize foundation before adding advanced features (social, critique history, user feeds, etc.).

✅ PROGRESS UPDATE: Several P0 and P1 issues have been resolved. See section 10 for detailed status.

2️⃣ Full Bug & Issue List (Transcribed)

From handwritten notes:

- Need landing screen, loads too fast → “DrawEvolve Continue”
- Dark mode? Toggle?
- Onboarding — use “personalized,” not “AI”
- Canvas setup — when horizontal, 2×2 input fields
- Dark mode: gallery thumbnails need white bg
- Re-entering drawing: can’t save (overwrite) or get AI feedback
- Need dark/light mode logo variants
- Gallery can be broken when creating new art or revisiting drawings
- Need loading, app icon, app name
- Brush strokes get thicker when release
- Feedback markdown rendering
- Canvas: no zoom
- Canvas rotation distorts drawing
- Finish selection tools
- Critique history (Pencil UI + timestamp)
- Gallery traps you (can’t get back to drawing; redundant profile icon)
- Auth?

3️⃣ Priority Breakdown
Priority	Type	Task	Est. Hours	Description
🟥 P0	Core Bug	Gallery trap / return-to-drawing failure	3–4	Router/state machine refactor
🟥 P0	Core Bug	Re-enter drawing can’t save/overwrite	4	Autosave, versioned bundle
🟥 P0	Core UX	Canvas rotation distorts drawing	5–6	Maintain doc-space coordinates
🟥 P0	Core UX	No zoom	4–5	Add pinch/scroll gesture layer
🟥 P0	Core System	Gallery breaks on new/revisit	3–4	Async transactional writes
🟧 P1	UX	Landing screen loads too fast	2	Add skeleton + “Continue”
🟧 P1	Brush	Brush thickens on release	3	Clamp width post-smoothing
🟧 P1	UI	Dark mode toggle + logo variants	2–3	Asset swap, system preference
🟧 P1	UI	Dark mode thumbnails need bg	1	Style fix
🟧 P1	Feedback	Markdown rendering	2	AttributedString(markdown:)
🟧 P1	Copy	Onboarding tone (“personalized”)	1	UX copy edit
🟨 P2	UI	Loading screen, app icon, name	2–3	Launch storyboard pass
🟨 P2	Feature	Critique history	4–6	Log + UI
🟨 P2	Feature	Selection tools	5–8	Implement or hide
🟨 P2	System	Auth?	TBD	Sign in w/ Apple or guest mode

Totals:
	•	P0: ~25h
	•	P1: ~12h
	•	P2: ~14h
→ ~1 focused week of stabilization for TestFlight readiness.

⸻

4️⃣ Potential Foundational Risks

A. Navigation & State Machine
	•	Smell: Multiple sources of truth (e.g., view controller state vs. app state).
	•	Fix: Create one reducer-style state machine:

enum Mode { case gallery, editor, feedback }
struct AppState { var mode: Mode; var currentDocId: UUID? }

B. Document Lifecycle
	•	Smell: Re-entering drawing doesn’t save properly.
	•	Fix: Treat each drawing as a .drawevolve bundle containing JSON model, preview PNG, critique log. Autosave on brush lift + background.

C. Coordinate System / Transform
	•	Smell: Rotation distorts strokes.
	•	Fix: Store all strokes in document coordinates; view layer only applies a single transform matrix.

D. Input Pipeline
	•	Smell: Stroke width changes on touchesEnded.
	•	Fix: Freeze width at last coalesced Pencil sample. End event closes geometry only.

E. Async Persistence
	•	Smell: Gallery breaks when creating or revisiting docs.
	•	Fix: Make doc writes atomic: only show gallery updates after save completes.

⸻

5️⃣ Key Invariants to Lock Down
	1.	Single source of truth:
Only one AppState controls navigation and document IDs.
	2.	Document-space consistency:
Strokes, layers, selections live in doc coordinates — never view coordinates.
	3.	Transactional persistence:
Every create/open/save action is atomic and returns the same doc version.
	4.	Input determinism:
Pencil input pipeline = samples → smooth → width → mesh. End events never modify stroke data.
	5.	Autosave & recovery:
Always recoverable without user intervention. App kill → relaunch = doc restored.

⸻

6️⃣ Diagnostic Checklist

✅ State audit — ensure only one currentDocId
✅ Transform audit — doc-space invariants hold during zoom/rotation
✅ Autosave probe — kill app mid-stroke, relaunch
✅ Concurrency probe — hammer create/open cycles
✅ End-event check — log width stability

⸻

7️⃣ Stabilization Sprint Plan (5 Days)

Day 1–2:
	•	Router refactor
	•	Document lifecycle
	•	Autosave & preview versioning

Day 3:
	•	Transform matrix cleanup
	•	Zoom & rotation fix

Day 4:
	•	Brush width finalization
	•	Dark/light UI assets
	•	Loading skeleton

Day 5:
	•	Markdown renderer
	•	Copy polish
	•	Hide unfinished tools
	•	Smoke test → TestFlight build

⸻

8️⃣ Next Milestone: Post-Stabilization

Once this sprint passes:
	•	Introduce Accounts (guest → Apple Sign-In)
	•	Critique History Log
	•	Layer System QA
	•	AI Coach Iteration (Feedback Engine v2)
	•	Social Features (Phase II) — only when doc model + sync are bulletproof.

⸻

9️⃣ Mindset Recap

You caught the perfect inflection point:

"From functional prototype to reliable app."

This stabilization cycle isn't a slowdown — it's the multiplier that makes every next feature safe, testable, and scalable.

⸻

🔟 Completed Fixes (October 12, 2025)

✅ P0 FIXES COMPLETED:

1. **Gallery trap / return-to-drawing failure** ✅ FIXED
   - Status: RESOLVED
   - Solution: Added "Close" button in gallery navigation, fixed gallery button visibility
   - Commits: 51ddc3e, 06e942d, 1b86736
   - Details: Gallery now has proper navigation controls. Gallery button always visible in canvas, even when toolbar collapsed, ensuring users can navigate back from any state.

2. **Re-enter drawing can't save/overwrite** ✅ FIXED
   - Status: RESOLVED
   - Solution: Implemented proper currentDrawingID tracking and update logic
   - Commits: 7c965a0, 3ddf92c
   - Details: Save/overwrite now works correctly. System tracks currentDrawingID and updates existing drawings instead of creating duplicates. Save and Feedback buttons properly enabled after loading existing drawings via hasLoadedExistingImage flag.

3. **Gallery breaks on new/revisit** ✅ FIXED
   - Status: RESOLVED
   - Solution: Fixed gallery thumbnails with proper GeometryReader, fixed save logic
   - Commits: 3ddf92c
   - Details: Gallery thumbnails now render correctly with proper centering and aspect ratio. Save operations are atomic and consistent.

✅ P1 FIXES COMPLETED:

1. **Dark mode thumbnails need bg** ✅ FIXED
   - Status: RESOLVED
   - Solution: Added white background to gallery thumbnails, changed border to adaptive color
   - File: GalleryView.swift:197
   - Details: Thumbnails now display properly in dark mode with white background and adaptive border (primary.opacity(0.2)).

2. **Onboarding tone ("personalized")** ✅ FIXED
   - Status: RESOLVED
   - Solution: Updated all "AI" references to "personalized" in onboarding
   - File: OnboardingPopup.swift:34, 60-61
   - Details: Changed "AI-powered drawing coach" to "personalized drawing coach" and "Get AI feedback" to "Get personalized feedback" throughout onboarding flow.

3. **Markdown rendering** ✅ IMPROVED
   - Status: RESOLVED
   - Solution: Implemented native SwiftUI AttributedString markdown with fallback parser
   - Files: FeedbackOverlay.swift:112-218, FloatingFeedbackPanel.swift:57
   - Details: Now uses iOS native markdown rendering (AttributedString) with proper formatting. Falls back to custom parser if needed. Applied to both FeedbackOverlay and FloatingFeedbackPanel.

🟨 P0 ISSUES REMAINING:

1. **Canvas rotation distorts drawing** 🔴 NOT STARTED
   - Est. hours: 5–6
   - Next step: Implement document-space coordinates with view transform matrix

2. **No zoom** 🔴 NOT STARTED
   - Est. hours: 4–5
   - Next step: Add pinch gesture and coordinate transformation

🟨 P1 ISSUES REMAINING:

1. **Landing screen loads too fast** 🟡 NOT STARTED
   - Est. hours: 2

2. **Brush thickens on release** 🟡 NOT STARTED
   - Est. hours: 3
   - Note: Debug logging added in CanvasRenderer.swift and MetalCanvasView.swift

3. **Dark mode toggle + logo variants** 🟡 NOT STARTED
   - Est. hours: 2–3

🟨 P2 ISSUES REMAINING:

All P2 issues remain as documented in section 3️⃣.

⸻

📊 PROGRESS SUMMARY:

✅ Completed: 6 fixes (3 P0, 3 P1)
🔴 Remaining P0: 2 issues (~10h)
🟡 Remaining P1: 3 issues (~7-8h)
⏳ Total remaining critical path: ~17-18 hours

Key achievements:
- Gallery navigation fully functional
- Save/overwrite system working correctly
- Dark mode visual polish complete
- Onboarding copy refined
- Markdown rendering professional-grade
- Foundation stable for next development phase

Next priorities:
1. Canvas rotation fix (document-space coordinates)
2. Zoom implementation (pinch gestures)
3. Brush width stability on touchesEnded
